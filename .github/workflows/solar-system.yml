name: Sistema Solar Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://luiseduardo:G3n3rica@cluster0.hrpaoxp.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Pruebas Unitarias
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18
        - name: Cache NPM dependencias
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        needs: unit-testing
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v4
          with:
            node-version: 18
    
        - name: Install Dependencies
          run: npm install
    
        - name: Check code Coverage
          continue-on-error: true
          run: npm run coverage
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Resultado
            path: coverage
            retention-days: 5

    docker:
        name: Container
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Login to ACR
            uses: docker/login-action@v3
            with:
              registry: luisrg3citperuacr001.azurecr.io
              username: ${{ secrets.AZURE_CLIENT_ID }}
              password: ${{ secrets.AZURE_CLIENT_SECRET }}

          - name: Docker Build and Push
            uses: docker/build-push-action@v4
            with:
              context: .
              push: true
              tags: luisrg3citperuacr001.azurecr.io/sistemasolar:latest
              cache-from: type=registry,ref=luisrg3citperuacr001.azurecr.io/sistemasolar:latest
              cache-to: type=inline
      
    dev-deploy:
        if: contains(github.ref, 'feature/')
        needs: docker
        uses: .github/workflows/reuse-deployment.yml

    
    # dev-integracion-testing:
    #         name: Dev Integration Testing
    #         needs: dev-deploy
    #         runs-on: ubuntu-latest
    #         steps:
    #           - name: Test URL Output using CURL and JQ
    #             run: |
    #               echo $URL
    #               echo "------------------------"
    #               curl https://$URL/live -s -k | jq -r .status | grep -i live


    prod-deploy:
        if: github.ref == 'refs/heads/main'
        needs: docker
        uses: .github/workflows/reuse-deployment.yml
