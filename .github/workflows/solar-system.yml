name: Sistema Solar Workflow
##nombre del espacio de trabajo
permissions:
  id-token: write
  contents: read

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://luiseduardo:G3n3rica@cluster0.hrpaoxp.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    
jobs:
    unit-testing:
        name: Pruebas Unitarias
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18
        - name: Cache NPM dependencias
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version - 18
          uses: actions/setup-node@v4
          with:
            node-version: 18
    
        - name: Install Dependencies
          run: npm install
    
        - name: Check code Coverage
          continue-on-error: true ## esta expresion nos ayuda a saltar el error que nos sale en Coverage
          run: npm run coverage
        
        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Resultado
            path: coverage
            retention-days: 5

    docker:
        name: Container
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Login to ACR
            uses: docker/login-action@v3
            with:
              registry: luisrg3citperuacr001.azurecr.io
              username: ${{ secrets.AZURE_CLIENT_ID }}
              password: ${{ secrets.AZURE_CLIENT_SECRET }}

          - name: Docker Build
            uses: docker/build-push-action@v4
            with:
              context: .
              push: false
              tags: luisrg3citperuacr001.azurecr.io/sistemasolar:latest


          - name: Docker Push
            uses: docker/build-push-action@v4
            with:
              context: .
              push: true
              tags: luisrg3citperuacr001.azurecr.io/sistemasolar:latest
      
    dev-deploy:
        needs: docker
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: Install kubectl CLI
            uses: azure/setup-kubectl@v3
            with:
              version: 'v1.26.0'

          - name: Azure login
            uses: azure/login@v2
            with:
              client-id: ${{ secrets.AZURE_CLIENT_ID }}
              client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
              tenant-id: ${{ secrets.AZURE_TENANT_ID }}
              subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

          - name: Set AKS context
            uses: azure/aks-set-context@v4
            with:
              resource-group: rgimgcontainer
              cluster-name: AKS1-APP             

          - name: Informacion de Cluster Detalles
            run: |
              kubectl version --short
              echo --------------------------------------
              kubectl get nodes
          - name: Controller IP 
            run: |
             INGRESS_IP=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
             echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_ENV


          - name: Replicas token en el manifiestos files
            uses: cschleiden/replace-tokens@v1
            with:
              tokenPrefix: '_{_'
              tokenSuffix: '_}_'
              files: '["kubernetes/development/*.yaml"]'
            env:
                NAMESPACE: ${{ vars.NAMESPACE }}
                REPLICAS: ${{ vars.REPLICAS }}
                IMAGE: luisrg3citperuacr001.azurecr.io/sistemasolar:latest
                INGRESS_IP: ${{ env.INGRESS_IP }}
          - name: Check Files
            run: |
             cat kubernetes/development/*.yaml
